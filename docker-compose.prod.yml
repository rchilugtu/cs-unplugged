version: '3.8'

# --- Base config -------------------------------------------------------------

x-default-opts:
    &default-opts
    logging:
        options:
            max-size: '1m'
            max-file: '3'

# --- Base Django config ------------------------------------------------------

x-django-config:
    &django-config
    image: ghcr.io/rchilugtu/cs-unplugged:research-study-block-based-programming
    environment:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: "5432"
        DEPLOYMENT_ENVIRONMENT_FILE: /research-two_deployment_environment
        DJANGO_SECRET_KEY_FILE: /run/secrets/research-two_django_secret_key
        POSTGRES_DB_FILE: /run/secrets/research-two_postgres_db
        POSTGRES_USER_FILE: /run/secrets/research-two_postgres_user
        POSTGRES_PASSWORD_FILE: /run/secrets/research-two_postgres_password
    configs:
        - research-two_deployment_environment
    secrets:
        - research-two_django_secret_key
        - research-two_postgres_db
        - research-two_postgres_user
        - research-two_postgres_password

# -----------------------------------------------------------------------------

services:
    django:
        <<: *default-opts
        <<: *django-config
        deploy:
            replicas: 2
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==apps
            restart_policy:
                condition: on-failure
            labels:
                - "traefik.enable=true"
                - "traefik.docker.network=uccser-public"
                - "traefik.http.services.research-two-django.loadbalancer.server.port=8000"
                - "traefik.http.routers.research-two-django.service=research-two-django"
                - "traefik.http.routers.research-two-django.rule=Host(`uccser-study-two.csse.canterbury.ac.nz`)"
                - "traefik.http.routers.research-two-django.entryPoints=web"
        networks:
            - uccser-public
            - backend

    task-update-data:
        <<: *default-opts
        <<: *django-config
        command: python ./manage.py updatedata
        deploy:
            replicas: 0
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==apps
            restart_policy:
                condition: none
        healthcheck:
            disable: true
        networks:
            - backend

    postgres:
        <<: *default-opts
        image: postgres:13.3
        # TODO: Write test script that reads secret files
        # to get correct username
        # healthcheck:
        #     test: ["CMD-SHELL", "pg_isready -U postgres"]
        #     start_period: 10s
        #     interval: 10s
        #     timeout: 5s
        #     retries: 3
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==data
            restart_policy:
                condition: on-failure
        environment:
            POSTGRES_DB_FILE: /run/secrets/research-two_postgres_db
            POSTGRES_USER_FILE: /run/secrets/research-two_postgres_user
            POSTGRES_PASSWORD_FILE: /run/secrets/research-two_postgres_password
        secrets:
            - research-two_postgres_db
            - research-two_postgres_user
            - research-two_postgres_password
        networks:
            - backend
        volumes:
            - postgres-data:/var/lib/postgresql/data:Z
            - postgres-data-backups:/backups:z

    elasticsearch:
        <<: *default-opts
        image: elasticsearch:5
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==data
            restart_policy:
                condition: on-failure
        networks:
            - backend
        volumes:
            - search-index:/usr/share/elasticsearch/data:Z

    jobe:
        <<: *default-opts
        image: trampgeek/jobeinabox:latest
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.role==worker
                    - node.labels.role==apps
            restart_policy:
                condition: on-failure
        networks:
            - backend

configs:
    research-two_deployment_environment:
        external: true

secrets:
    research-two_django_secret_key:
        external: true
    research-two_postgres_db:
        external: true
    research-two_postgres_user:
        external: true
    research-two_postgres_password:
        external: true

networks:
    uccser-public:
        external: true
    backend:
        driver: overlay
        attachable: true

volumes:
    postgres-data: {}
    postgres-data-backups: {}
    search-index: {}