name: Test and deploy

on:
  workflow_dispatch:
  push:

jobs:
  test-content:
    name: Tests - Content
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Start systems
        run: docker-compose -f docker-compose.local.yml up -d
      - name: Create static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" node npm run dev
      - name: Migrate database
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py migrate
      - name: Load content
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py updatedata
      - name: Rebuild search
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py rebuild_index --noinput
      - name: Make resource thumbnails
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py makeresourcethumbnails
      - name: Collect static cards
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py collectstatic --no-input

  test-general:
    name: Tests - General
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run general tests
        run: ./dev ci test_general

  test-resources:
    name: Tests - Resources
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run resource tests
        run: ./dev ci test_resources

  test-management:
    name: Tests - Management
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run management tests
        run: ./dev ci test_management

  test-style:
    name: Tests - Style
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run style tests
        run: ./dev style

  test-docs:
    name: Tests - Documentation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Sphinx Build
        uses: ammaraskar/sphinx-action@0.4

  create-and-publish-dev-image:
    name: Create and publish dev image
    if: (github.ref == 'refs/heads/develop') || (github.ref == 'refs/heads/server-migration')
    runs-on: ubuntu-20.04
    needs: [test-content, test-general, test-resources, test-management, test-style, test-docs]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Start system
        run: docker-compose -f docker-compose.local.yml up -d

      - name: Create production static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" node npm run build

      - name: Migrate database
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py migrate

      - name: Load resources
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py loadresources

      - name: Make resource thumbnails
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py makeresourcethumbnails

      - name: Make resources
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py makeresources

      - name: Collect staticfiles
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python manage.py collectstatic --no-input

      - name: Log in to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.6.1
        with:
          file: ./infrastructure/production/django/Dockerfile
          context: .
          push: true
          tags: ghcr.io/uccser/cs-unplugged:develop
          build-args: GIT_SHA=$GITHUB_SHA
