name: Test and deploy

on:
  workflow_dispatch:
  push:

jobs:
  test-content:
    name: Tests - Content
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Start systems
        run: docker-compose -f docker-compose.local.yml up -d
      - name: Create static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" node npm run dev
      - name: Collect static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py collectstatic --no-input
      - name: Migrate database
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py migrate
      - name: Load content
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py updatedata
      - name: Rebuild search
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py rebuild_index --noinput
      - name: Make resource thumbnails
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py makeresourcethumbnails
      - name: Collect static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py collectstatic --no-input

  test-general:
    name: Tests - General
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run general tests
        run: ./dev ci test_general

  test-resources:
    name: Tests - Resources
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run resource tests
        run: ./dev ci test_resources

  test-management:
    name: Tests - Management
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run management tests
        run: ./dev ci test_management

  test-style:
    name: Tests - Style
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run style tests
        run: ./dev ci style

  test-docs:
    name: Tests - Documentation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
      - name: Build documentation
        run: sphinx-build -b html -W docs/ docs/_build/

  create-static-files:
    name: Create static files
    if: (github.ref == 'refs/heads/develop') || (github.ref == 'refs/heads/server-migration')
    runs-on: ubuntu-20.04
    needs: [
      test-content,
      test-general,
      test-resources,
      test-management,
      test-style,
      test-docs
    ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Start system
        run: docker-compose -f docker-compose.local.yml up -d

      - name: Create production static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" node npm run build

      - name: Collect staticfiles
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python manage.py collectstatic --no-input

      - name: Archive static files
        run: tar czf static-files.tar.gz csunplugged/staticfiles/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: static-files
          path: static-files.tar.gz
          retention-days: 3

  create-resource-thumbnails:
    name: Create resource thumbnails
    if: (github.ref == 'refs/heads/develop') || (github.ref == 'refs/heads/server-migration')
    runs-on: ubuntu-20.04
    needs: [
      test-content,
      test-general,
      test-resources,
      test-management,
      test-style,
      test-docs
    ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Start system
        run: docker-compose -f docker-compose.local.yml up -d

      - name: Create production static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" node npm run build

      - name: Migrate database
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py migrate

      - name: Load resources
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py loadresources

      - name: Make resource thumbnails
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py makeresourcethumbnails --all-languages

      - name: Archive static files
        run: tar czf resource-thumbnails.tar.gz csunplugged/build/img/resources/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: resource-thumbnails
          path: resource-thumbnails.tar.gz
          retention-days: 3

  create-resources-en:
    name: Create 'en' resources
    if: (github.ref == 'refs/heads/develop') || (github.ref == 'refs/heads/server-migration')
    runs-on: ubuntu-20.04
    needs: [
      test-content,
      test-general,
      test-resources,
      test-management,
      test-style,
      test-docs
    ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Start system
        run: docker-compose -f docker-compose.local.yml up -d

      - name: Create production static files
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" node npm run build

      - name: Migrate database
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py migrate

      - name: Load resources
        run: docker-compose -f docker-compose.local.yml run --rm django python ./manage.py loadresources

      - name: Make resources
        run: docker-compose -f docker-compose.local.yml run --rm --user="root" django python ./manage.py makeresources --language en

      - name: Archive static files
        run: tar czf resources-en.tar.gz csunplugged/build/resources/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: resources-en
          path: resources-en.tar.gz
          retention-days: 3

  publish-dev-docker-image:
    name: Create and publish dev image
    if: (github.ref == 'refs/heads/develop') || (github.ref == 'refs/heads/server-migration')
    runs-on: ubuntu-20.04
    needs: [
      create-static-files,
      create-resource-thumbnails,
      create-resources-en,
    ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts/

      - name: Show file tree
        run: ls -R -l

      - name: Unpack all artifacts
        run: for f in archives/**/*.tar.gz ; do tar -xf "$f" -C csunplugged/staticfiles/ ; done

      - name: Log in to the Container registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.6.1
        with:
          file: ./infrastructure/production/django/Dockerfile
          context: .
          push: true
          tags: ghcr.io/uccser/cs-unplugged:develop
          build-args: GIT_SHA=$GITHUB_SHA
